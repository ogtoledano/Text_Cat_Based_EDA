## Import the packages
import numpy as np
from scipy import stats
import matplotlib.pyplot as plt
from statistic_test.statistic_hypothesis_test import t_test_giving_samples,wilcoxon_non_parametric_test, mannwhitneyu_non_parametric_test,hypothesis_test

## Define 2 distributions
#Sample Size
adam=[0.9594594594594594,0.9594594594594594,0.9684684684684685,0.9684684684684685,0.9684684684684685,0.954954954954955,0.9774774774774775,0.9684684684684685,0.972972972972973,0.9459459459459459,0.9684684684684685,0.9684684684684685,0.9414414414414415,0.972972972972973,0.9774774774774775,0.963963963963964,0.972972972972973,0.963963963963964,0.9684684684684685,0.9594594594594594,0.9684684684684685,0.9594594594594594,0.9774774774774775,0.9684684684684685,0.9594594594594594,0.954954954954955,0.9594594594594594,0.954954954954955,0.963963963963964,0.972972972972973]
adam_cumda

a=np.asarray(adam)
b=np.asarray(adam_cumda)

wilcoxon_non_parametric_test(a,b)


#####
adam=[0.963963963963964,0.9594594594594594,0.9774774774774775,0.972972972972973,0.963963963963964,0.9594594594594594,0.9594594594594594,0.963963963963964,0.972972972972973,0.9594594594594594,0.972972972972973,0.963963963963964,0.9504504504504504,0.9684684684684685,0.9774774774774775,0.972972972972973,0.9819819819819819,0.963963963963964,0.972972972972973,0.9414414414414415,0.972972972972973,0.963963963963964,0.972972972972973,0.9594594594594594,0.9774774774774775,0.963963963963964,0.9684684684684685, 0.9774774774774775,0.972972972972973,0.990990990990991]
adam_emna=[0.963963963963964,0.963963963963964,0.9774774774774775,0.9774774774774775,0.9594594594594594,0.963963963963964,0.963963963963964,0.9684684684684685,0.972972972972973,0.963963963963964,0.972972972972973,0.9684684684684685,0.9504504504504504,0.9594594594594594,0.9774774774774775,0.9774774774774775,0.9864864864864865,0.9594594594594594,0.9774774774774775,0.9459459459459459,0.9774774774774775,0.9684684684684685,0.9864864864864865,0.9684684684684685,0.9819819819819819,0.972972972972973,0.963963963963964,0.9864864864864865,0.972972972972973,0.990990990990991]

c=np.asarray(adam)
d=np.asarray(adam_emna)

wilcoxon_non_parametric_test(a,d)


###

sgd
sgd_cumda
e=np.asarray(sgd)
f=np.asarray(sgd_cumda)

wilcoxon_non_parametric_test(e,f)



###

sgd=[0.9369369369369369,0.9684684684684685,0.9819819819819819,0.9684684684684685,0.972972972972973,0.963963963963964,0.9774774774774775,0.9594594594594594,0.9684684684684685,0.9774774774774775,0.9594594594594594,0.972972972972973,0.9684684684684685,0.963963963963964,0.963963963963964,0.963963963963964,0.9684684684684685,0.963963963963964,0.954954954954955,0.9594594594594594,0.9684684684684685,0.9594594594594594,0.963963963963964,0.9774774774774775,0.9594594594594594,0.9684684684684685,0.9774774774774775,0.9684684684684685,0.9774774774774775,0.9774774774774775]
sgd_emna
g=np.asarray(sgd)
h=np.asarray(sgd_emna)

wilcoxon_non_parametric_test(g,h)


plt.boxplot([a,b,d],labels=["Adam", "Our 3","Our 4"])
plt.title('Comparison of measurements for the BBCS dataset')
plt.ylabel("Accuracy")
plt.savefig('bbcsportAdam.eps', format='eps')
plt.show()

plt.boxplot([e,f,h],labels=["SGD", "Our 1","Our 2"])
plt.title('Comparison of measurements for the BBCS dataset')
plt.ylabel("Accuracy")
plt.savefig('bbcsportSGD.eps', format='eps')
plt.show()


print("Differences SGD and Adam")
print(len(a),len(e))
wilcoxon_non_parametric_test(a,e)