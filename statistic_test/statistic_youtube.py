## Import the packages
import numpy as np
from scipy import stats
import matplotlib.pyplot as plt
from statistic_test.statistic_hypothesis_test import t_test_giving_samples,wilcoxon_non_parametric_test, mannwhitneyu_non_parametric_test,hypothesis_test

## Define 2 random distributions
#Sample Size


adam=[0.9388794567062818,0.9252971137521222,0.9269949066213922,0.9405772495755518,0.9303904923599321,0.933786078098472,0.9320882852292021,0.9252971137521222,0.9320882852292021,0.933786078098472,0.933786078098472,0.933786078098472,0.9269949066213922,0.933786078098472,0.9269949066213922,0.9269949066213922,0.933786078098472,0.9286926994906621,0.9252971137521222,0.9219015280135824,0.9303904923599321,0.9286926994906621,0.9320882852292021,0.9388794567062818,0.9371816638370118,0.9303904923599321,0.9320882852292021,0.933786078098472,0.933786078098472,0.9320882852292021]
adam_cumda=[0.9388794567062818,0.9354838709677419,0.933786078098472,0.9422750424448217,0.9303904923599321,0.9371816638370118,0.9320882852292021,0.9252971137521222,0.933786078098472,0.933786078098472,0.9405772495755518,0.9388794567062818,0.9354838709677419,0.9388794567062818,0.9303904923599321,0.9286926994906621,0.9371816638370118,0.9303904923599321,0.9252971137521222,0.9269949066213922,0.9303904923599321,0.9303904923599321,0.9320882852292021,0.9422750424448217,0.9388794567062818,0.9354838709677419,0.933786078098472,0.9388794567062818,0.9388794567062818,0.9422750424448217]

a=np.asarray(adam)
b=np.asarray(adam_cumda)

wilcoxon_non_parametric_test(a,b)

###
print("\n")
adam=[0.9269949066213922,0.9320882852292021,0.9371816638370118,0.933786078098472,0.9252971137521222,0.9354838709677419,0.9405772495755518,0.9405772495755518,0.9388794567062818,0.9303904923599321,0.9320882852292021,0.9252971137521222,0.9320882852292021,0.9269949066213922,0.9269949066213922,0.9286926994906621,0.9354838709677419,0.9320882852292021,0.9354838709677419,0.9303904923599321,0.9303904923599321,0.9269949066213922,0.9286926994906621,0.9286926994906621,0.933786078098472,0.933786078098472,0.9388794567062818,0.9286926994906621,0.9252971137521222,0.9439728353140917]
adam_emna=[0.9354838709677419,0.933786078098472,0.9405772495755518,0.9354838709677419,0.9286926994906621,0.9354838709677419,0.9422750424448217,0.9439728353140917,0.9405772495755518,0.9303904923599321,0.933786078098472,0.9303904923599321,0.933786078098472,0.9269949066213922,0.9286926994906621,0.9303904923599321,0.9371816638370118,0.9388794567062818,0.9354838709677419,0.9320882852292021,0.9303904923599321,0.9269949066213922,0.9303904923599321,0.9371816638370118,0.933786078098472,0.933786078098472,0.9371816638370118,0.9269949066213922,0.9235993208828522,0.9422750424448217]

c = np.asarray(adam)
d = np.asarray(adam_emna)

wilcoxon_non_parametric_test(c,d)

###
print("\n")
sgd=[0.9303904923599321,0.9320882852292021,0.9354838709677419,0.9320882852292021,0.933786078098472,0.9371816638370118,0.9269949066213922,0.9388794567062818,0.9354838709677419,0.9151103565365025,0.9388794567062818,0.9354838709677419,0.9354838709677419,0.9286926994906621,0.9371816638370118,0.9354838709677419,0.9286926994906621,0.9269949066213922,0.9303904923599321,0.9286926994906621,0.9354838709677419,0.9252971137521222,0.9252971137521222,0.9354838709677419,0.9320882852292021,0.9286926994906621,0.9371816638370118,0.9286926994906621,0.9269949066213922,0.933786078098472]
sgd_cumda=[0.933786078098472,0.9320882852292021,0.9388794567062818,0.933786078098472,0.933786078098472,0.9388794567062818,0.9303904923599321,0.9422750424448217,0.9388794567062818,0.9219015280135824,0.9439728353140917,0.9371816638370118,0.9388794567062818,0.9354838709677419,0.9371816638370118,0.9354838709677419,0.9320882852292021,0.9269949066213922,0.9320882852292021,0.9303904923599321,0.9388794567062818,0.9303904923599321,0.933786078098472,0.933786078098472,0.933786078098472,0.9303904923599321,0.9354838709677419,0.9286926994906621,0.9303904923599321,0.9405772495755518]
e = np.asarray(sgd)
f = np.asarray(sgd_cumda)


wilcoxon_non_parametric_test(e,f)

###
print("\n")
sgd=[0.9269949066213922,0.9286926994906621,0.9219015280135824,0.9286926994906621,0.9320882852292021,0.9303904923599321,0.9320882852292021,0.9405772495755518,0.9269949066213922,0.9320882852292021,0.9303904923599321,0.9303904923599321,0.933786078098472,0.933786078098472,0.933786078098472,0.9405772495755518,0.9320882852292021,0.9320882852292021,0.9320882852292021,0.9286926994906621,0.9303904923599321,0.9286926994906621,0.9286926994906621,0.9388794567062818,0.9286926994906621,0.9354838709677419,0.9405772495755518,0.9354838709677419,0.9354838709677419,0.9354838709677419]
sgd_emna=[0.9303904923599321,0.9303904923599321,0.9219015280135824,0.9303904923599321,0.9388794567062818,0.933786078098472,0.9303904923599321,0.9405772495755518,0.9269949066213922,0.933786078098472,0.9303904923599321,0.9371816638370118,0.933786078098472,0.9354838709677419,0.9354838709677419,0.9405772495755518,0.933786078098472,0.9320882852292021,0.9320882852292021,0.9286926994906621,0.9371816638370118,0.9286926994906621,0.9354838709677419,0.9388794567062818,0.9354838709677419,0.9371816638370118,0.9405772495755518,0.9371816638370118,0.933786078098472,0.9320882852292021]
g = np.asarray(sgd)
h = np.asarray(sgd_emna)


wilcoxon_non_parametric_test(g,h)

# Plot results

plt.boxplot([a,b,d],labels=["Adam", "Variant 3","Variant 4"])
plt.title('Comparison of measurements for the YSC dataset')
plt.ylabel("Accuracy")
plt.savefig('yscAdam.eps', format='eps')
plt.show()

plt.boxplot([g,f,h],labels=["SGD","Variant 1","Variant 2"])
plt.title('Comparison of measurements for the YSC dataset')
plt.ylabel("Accuracy")
plt.savefig('yscSGD.eps', format='eps')
plt.show()

print("Differences SGD and Adam")
print(len(a),len(g))
wilcoxon_non_parametric_test(a,g[:len(a)])